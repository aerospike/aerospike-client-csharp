<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C76109A1-1A6C-4F78-848B-DB049D5509E3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Aerospike.Test</RootNamespace>
    <AssemblyName>AerospikeTest</AssemblyName>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>disable</Nullable>

    <IsPackable>false</IsPackable>

    <Version>7.0.0</Version>

    <Company>Aerospike</Company>

    <Authors>Aerospike</Authors>

    <Configurations>Debug;Release;Coverage</Configurations>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;DEBUG;NETCORE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Coverage|AnyCPU'">
    <DefineConstants>TRACE;DEBUG;NETCORE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>TRACE;NETCORE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>

  <ItemGroup>
    <None Update="settings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="LuaResources\average_example.lua" />
    <EmbeddedResource Include="LuaResources\filter_example.lua" />
    <EmbeddedResource Include="LuaResources\record_example.lua" />
    <EmbeddedResource Include="LuaResources\sum_example.lua" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.msbuild" Version="6.0.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="8.0.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.9.0" />
    <PackageReference Include="MSTest.TestAdapter" Version="3.2.2" />
    <PackageReference Include="MSTest.TestFramework" Version="3.2.2" />
    <PackageReference Include="coverlet.collector" Version="6.0.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="8.0.0" />
  </ItemGroup>

  <PropertyGroup>
    <CollectCoverage>true</CollectCoverage>
    <CoverletOutputFormat>lcov</CoverletOutputFormat>
    <CoverletOutput>./coverage/lcov.info</CoverletOutput>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\AerospikeClient\AerospikeClient.csproj" />
    <ProjectReference Include="..\AerospikeClientProxy\AerospikeClientProxy.csproj" />
  </ItemGroup>

  <Target Name="AnalyzeCoverage" AfterTargets="PostBuildEvent" Condition="'$(ConfigurationName)' == 'Coverage'">
    <Exec Command="dotnet test" />
    <Exec Command="dotnet reportgenerator &quot;-reports:coverage/lcov.info&quot; &quot;-targetdir:coverage&quot; -reporttypes:Html" />
  </Target>

</Project>
