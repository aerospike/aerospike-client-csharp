name: 'Run EE Server'
description: 'Run EE server. Returns once server is ready. Only tested on Linux and macOS'
# NOTE: do not share this server container with others
# since it's using the default admin / admin credentials
inputs:
  # All inputs in composite actions are strings
  registry-name:
    description: Registry name
    required: false
    default: docker.io
  registry-username:
    description: Required for using release candidates
    required: false
  # Github Composite Actions can't access secrets
  # so we need to pass them in as inputs
  registry-password:
    description: Required for using release candidates
    required: false
  image-name:
    required: false
    description: aerospike/aerospike-server-enterprise
    default: 'aerospike/aerospike-server-enterprise'
  server-tag:
    required: true
    description: Specify Docker tag
    default: 'latest'

runs:
  using: "composite"
  steps:
  - name: Log into registry to get non-public server RCs
    # We can still pull public images while logged in, so just do this all the time to make things simple
    uses: docker/login-action@v3
    with:
      registry: ${{ inputs.registry-name }}
      username: ${{ inputs.registry-username }}
      password: ${{ inputs.registry-password }}

  - run: echo IMAGE_FULL_NAME=${{ inputs.registry-name }}/${{ inputs.image-name }}:${{ inputs.server-tag }} >> $GITHUB_ENV
    shell: bash

  # macOS Github runners and Windows self-hosted runners don't have buildx installed by default
  - if: ${{ runner.os == 'Windows' || runner.os == 'macOS' }}
    uses: docker/setup-buildx-action@v3

  - name: Build and push
    id: docker-build
    uses: docker/build-push-action@v6
    with:
      # Don't want to use default Git context or else it will clone the whole client repo again
      context: .github/workflows/docker-build-context
      build-args: |
        server_image=${{ env.IMAGE_FULL_NAME }}
      # setup-buildx-action configures Docker to use the docker-container build driver
      # This driver doesn't publish an image locally by default
      # so we have to manually enable it
      load: true

  - run: echo SERVER_CONTAINER_NAME="aerospike" >> $GITHUB_ENV
    shell: bash

  - run: docker run -d --name ${{ env.SERVER_CONTAINER_NAME }} -e DEFAULT_TTL=2592000 -p 3000:3000 ${{ docker-build.outputs.digest }}
    shell: bash

  - uses: ./.github/actions/wait-for-as-server-to-start
    with:
      container-name: ${{ env.SERVER_CONTAINER_NAME }}
      is-security-enabled: false
      is-strong-consistency-enabled: true

  # All the partitions are assumed to be dead when reusing a roster file
  - run: docker exec ${{ env.SERVER_CONTAINER_NAME }} asadm --enable --execute "manage revive ns test"
    shell: bash

  # Apply changes
  - run: docker exec ${{ env.SERVER_CONTAINER_NAME }} asadm --enable --execute "manage recluster"
    shell: bash

  # For debugging
  - run: docker logs aerospike
    shell: bash
