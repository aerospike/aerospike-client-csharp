name: Build and test code

# Trigger test workflow whenever:
# 1. A pull request is updated (e.g with new commits)
# 2. Commits are pushed directly to the stage or master branch
on:
  push:
    branches: ["stage*", "master*", "pipeline"]
  pull_request:
    branches: ["stage*", "master*"]
    types: [
      # Default triggers
      opened,
      synchronize,
      reopened,
      # Additional triggers
      labeled,
      unlabeled
    ]
  workflow_dispatch:
    inputs:
      test-server-rc:
        type: boolean
        default: false
        required: true

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
        
    - name: Build
      uses: ./.github/actions/build
      with:
        sgKey: ${{ secrets.SG_KEY }}
        
    #- name: Upload to JFrog
    #    if: ${{ !cancelled() && inputs.upload-artifacts == true }}
    #    uses: ./.github/actions/upload-to-jfrog
    
    - uses: actions/upload-artifact@v4
      with:
        name: AerospikeTest.dll
        path: .\AerospikeTest\bin\Release\net8.0\AerospikeTest.dll
  
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download testing dll
      uses: actions/download-artifact@v4
      with:
        name: AerospikeTest.dll
    - uses: actions/checkout@v2
    
    - name: Run EE server
      uses: ./.github/actions/run-ee-server
      with:
        use-server-rc: ${{ inputs.use-server-rc }}
        docker-hub-username: ${{ inputs.docker-hub-username }}
        docker-hub-password: ${{ inputs.docker-hub-password }}

    - name: Test
      shell: bash
      run: dotnet exec AerospikeTest.dll --settings .\test.runsettings
    
    - name: Show logs if failed
      shell: bash
      if: ${{ failure() }}
      run: |
        docker container logs aerospike
        cat ./configs/aerospike.conf
    
    #- name: Test
    #  uses: ./.github/actions/test
    #  with:
    #    use-server-rc: ${{ contains(github.event.pull_request.labels.*.name, 'new-server-features') }}
    #    docker-hub-username: ${{ secrets.DOCKER_HUB_BOT_USERNAME }}
    #    docker-hub-password: ${{ secrets.DOCKER_HUB_BOT_PW }}
    
