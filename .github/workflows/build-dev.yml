name: Build and test dev
run-name: Build artifacts and run dev branch tests (registry-name=${{ inputs.registry-name }}, server-tag=${{ inputs.server-tag }})

permissions:
  # This is required for requesting the OIDC token
  id-token: write
  # These are required for the nuget signing workflow
  contents: read
  packages: read

# Trigger test workflow whenever:
# 1. Commits are pushed directly to a CLIENT branch
# 2. Pull requests to stage branch are updated
on:
  push:
    branches: ["CLIENT*"]
  pull_request:
    branches: ["stage"]
    types: [
      # Default triggers
      opened,
      synchronize,
      reopened,
      # Additional triggers
      labeled,
      unlabeled
    ]
  workflow_dispatch:
    inputs:
      registry-name:
        type: string
        required: false
        description: Registry name
        default: 'docker.io'
      image-name:
        type: string
        required: false
        description: Image name
        default: 'aerospike/aerospike-server-enterprise'
      server-tag:
        type: string
        required: true
        default: 'latest'
        description: 'Server docker image tag'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Build artifacts
      uses: ./.github/actions/build
      with:
        sgKey: ${{ secrets.SG_KEY }}

  prep-for-sign:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download client artifacts
      uses: actions/download-artifact@v4
      with:
        name: AerospikeClient-${{ github.run_number }}
        path: artifacts
    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        name: AerospikeTest-${{ github.run_number }}
        path: artifacts
    - name: Move file to sign folder
      run: |
        mkdir ${GITHUB_WORKSPACE}/sign
        mv ${GITHUB_WORKSPACE}/artifacts/Aerospike.Client*.nupkg ${GITHUB_WORKSPACE}/sign
  
  sign:
    needs: prep-for-sign
    uses: aerospike/shared-workflows/.github/workflows/reusable_sign-artifacts.yaml@nuget_signing
    with:
      artifact-glob: ${GITHUB_WORKSPACE}/sign/*.nupkg
      artifact-name: artifacts
      enable-nuget-signing: true
    secrets:
      gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
      gpg-public-key: ${{ secrets.GPG_PUBLIC_KEY }}
      gpg-key-pass: ${{ secrets.GPG_KEY_PASS }}
      es-username: ${{ secrets.ES_USERNAME }}
      es-password: ${{ secrets.ES_PASSWORD }}
      credential-id: ${{ secrets.CREDENTIAL_ID }}
      es-totp-secret: ${{ secrets.ES_TOTP_SECRET }}

  upload:
    needs: sign
    runs-on: ubuntu-latest
    steps:
    - name: Upload to JFrog
      uses: ./.github/actions/upload-to-jfrog

  test:
    needs: upload
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Test
      uses: ./.github/actions/test
      with:
        jfrog-tests-repo-name: database-generic-dev-local
        registry-name: ${{ inputs.registry-name || 'docker.io' }}
        image-name: ${{ inputs.image-name || 'aerospike/aerospike-server-enterprise' }}
        server-tag: ${{ inputs.server-tag || 'latest' }}
        registry-username: ${{ secrets.DOCKER_HUB_BOT_USERNAME }}
        registry-password: ${{ secrets.DOCKER_HUB_BOT_PW }}
   
